const initCanvasHeight=window.innerHeight,initCanvasWidth=window.innerWidth,initColor="#000000",initTool=68,initMinPoint={x:initCanvasWidth,y:initCanvasHeight},initMaxPoint={x:0,y:0};let minPoint={...initMinPoint},maxPoint={...initMaxPoint},points=[],memStack=[],memPointsStack=[{min:{x:0,y:0},max:{x:0,y:0}}];const tool={68:{name:"draw",shouldDisplay:!0,config:function(t){style.setCursor("crosshair"),t.lineWidth=style.getStrokeWidth(),t.lineJoin="round",t.lineCap="round",t.strokeStyle=style.getColor(),t.fillStyle=style.getColor()},preRender:function(t,e,n){const o=getMousePosition(t,n);pushPosition(o),setMaxMinPoint(o)},render:function(t,e,n){const o=getMousePosition(t,n);if(pushPosition(o),setMaxMinPoint(o),points.length<4){var i=points[0];return e.beginPath(),e.arc(i.x,i.y,e.lineWidth/2,0,2*Math.PI,1),e.closePath(),e.fill(),null}e.beginPath(),e.moveTo(points[0].x,points[0].y);let s=0;for(s=1;s<points.length-3;s++){let t=(points[s].x+points[s+1].x)/2,n=(points[s].y+points[s+1].y)/2;e.quadraticCurveTo(points[s].x,points[s].y,t,n)}e.quadraticCurveTo(points[s].x,points[s].y,points[s+1].x,points[s+1].y),e.stroke()},postRender:function(t,e,n){clear()}},82:{name:"rectangle",shouldDisplay:!0,config:function(t){style.setCursor("default"),t.lineWidth=style.getStrokeWidth(),t.lineJoin="",t.lineCap="",t.strokeStyle=style.getColor(),t.fillStyle=style.getColor()},preRender:function(t,e,n){pushPosition(getMousePosition(t,n))},render:function(t,e,n){const o=getMousePosition(t,n);e.beginPath(),e.rect(points[0].x,points[0].y,o.x-points[0].x,o.y-points[0].y),e.stroke()},postRender:function(t,e,n){clear()}},67:{name:"circle",shouldDisplay:!0,config:function(t){style.setCursor("default"),t.lineWidth=style.getStrokeWidth(),t.lineJoin="",t.lineCap="",t.strokeStyle=style.getColor()},preRender:function(t,e,n){pushPosition(getMousePosition(t,n))},render:function(t,e,n){const o=getMousePosition(t,n);e.beginPath();const i=points[0].x+Math.floor((o.x-points[0].x)/2),s=points[0].y+Math.floor((o.y-points[0].y)/2),a=Math.abs(o.y-s),l=Math.abs(o.x-i);e.ellipse(i,s,l,a,0,0,2*Math.PI),e.stroke()},postRender:function(t,e,n){clear()}},76:{name:"line",shouldDisplay:!0,config:function(t){style.setCursor("default"),t.lineWidth=style.getStrokeWidth(),t.lineJoin="round",t.lineCap="round",t.strokeStyle=style.getColor(),t.fillStyle=style.getColor()},preRender:function(t,e,n){pushPosition(getMousePosition(t,n))},render:function(t,e,n){const o=getMousePosition(t,n);e.beginPath(),e.moveTo(points[0].x,points[0].y),e.lineTo(o.x,o.y),e.stroke()},postRender:function(t,e,n){clear()}},65:{name:"arrow",shouldDisplay:!0,config:function(t){style.setCursor("default"),t.lineWidth=style.getStrokeWidth(),t.lineJoin="round",t.lineCap="round",t.strokeStyle=style.getColor(),t.fillStyle=style.getColor()},preRender:function(t,e,n){pushPosition(getMousePosition(t,n))},render:function(t,e,n){const o=getMousePosition(t,n),i=o.x,s=o.y,a=s-points[0].y,l=i-points[0].x;var r=Math.atan2(a,l);e.beginPath(),e.moveTo(points[0].x,points[0].y),e.lineTo(i,s),e.lineTo(i-20*Math.cos(r-Math.PI/6),s-20*Math.sin(r-Math.PI/6)),e.moveTo(i,s),e.lineTo(i-20*Math.cos(r+Math.PI/6),s-20*Math.sin(r+Math.PI/6)),e.stroke()},postRender:function(t,e,n){clear()}},84:{name:"text",shouldDisplay:!0,config:function(t){style.setCursor("text");const e=style.getFontSize().str+" "+style.getFontFamily();t.font=e,t.strokeStyle=style.getColor(),t.fillStyle=style.getColor()},preRender:function(t,e,n){updateState({...state,isWritting:!0});let o="text_input",i=document.getElementById(o);i&&document.getElementById("input_area").removeChild(i),i=document.createElement("spam");const s=getMousePosition(t,n);i.id=o,i.contentEditable=!0,i.style.color=style.getColor(),i.style.left=s.x+"px",i.style.top=s.y+"px",i.style.fontFamily=style.getFontFamily(),i.style.fontSize=style.getFontSize().str,i.classList.add("text-option"),document.getElementById("input_area").appendChild(i),n.preventDefault(),i.focus(),i.addEventListener("keydown",n=>{if(n.shiftKey&&"Enter"===n.code){document.getElementById("input_area").removeChild(i);let n=i.innerHTML;const o=(n=n.replaceAll("</div>","")).split("<div>");for(let t=0;t<o.length;t++)e.fillText(o[t],s.x+9,s.y+(style.getFontSize().value+3)*t);updateState({...state,isWritting:!1}),updateState({...state,isPainting:!1}),saveToMem(t,e)}"Escape"===n.code&&(document.getElementById("input_area").removeChild(i),updateState({...state,isWritting:!1}),updateState({...state,isPainting:!1}))})},render:function(t,e,n){return!0},postRender:function(t,e,n){isPainting=!1}},83:{name:"select",shouldDisplay:!0,config:function(t){style.setCursor("default")},preRender:function(t,e,n){const o=getMousePosition(t,n);for(let t=memPointsStack.length-1;t>0;t--){const e=memPointsStack[t].min,n=memPointsStack[t].max;if(isInsideFig(e,n,o.x,o.y))return selectFigure(e,n),!0}return!0},render:function(t,e,n){return!0},postRender:function(t,e,n){return!0}}},cmd={undo:function(t,e,n){memStack.length>0&&(lastCanvas=memStack.pop(),lastCanvasCtx=lastCanvas.getContext("2d"),clear(),t.clearRect(0,0,n.width,n.height),e.clearRect(0,0,n.width,n.height),t.drawImage(lastCanvas,0,0),e.drawImage(lastCanvas,0,0))},clear:function(t,e,n){clear(),t.clearRect(0,0,n.width,n.height),e.clearRect(0,0,n.width,n.height)}},colorsCmd={49:"#000000",50:"#FF0000",51:"#00FF00",52:"#0000FF"},style={getColor:function(){return document.getElementById("colorPickerInput").value},getStrokeWidth:function(){return document.getElementById("strokeWidthInput").value},getFontFamily:function(){return"Helvetica"},getFontSize:function(){return{value:20,unit:"px",str:"20px"}},setCursor:function(t){document.getElementsByTagName("body")[0].style.cursor=t},setColor:function(t){document.getElementById("colorPickerInput").value=t,displayColor(t)}};let state={currentTool:83,isPainting:!1,isWritting:!1};const canvas=document.getElementById("canvas"),ctx=canvas.getContext("2d");resizeCanvas(canvas,initCanvasWidth,initCanvasHeight);const memCanvas=document.createElement("canvas"),memCtx=memCanvas.getContext("2d");function resizeCanvas(t,e,n){t.width=e,t.height=n}function onCanvasMouseDown(t){updateState({...state,isPainting:!0}),pushToMemStack(memCanvas),tool[state.currentTool].preRender(canvas,ctx,t)}function onCanvasMouseMove(t){state.isPainting&&(ctx.clearRect(0,0,canvas.width,canvas.height),copyToCanvas(memCanvas),tool[state.currentTool].render(canvas,ctx,t))}function onCanvasMouseUp(t){updateState({...state,isPainting:!1}),saveToMem(canvas,ctx),pushToMemPointsStack({...minPoint},{...maxPoint}),resetMinMaxPoints(),tool[state.currentTool].postRender(canvas,ctx,t)}function selectAllFigures(){for(let t=0;t<memPointsStack.length;t++)selectFigure({...memPointsStack[t].min},{...memPointsStack[t].max})}function selectFigure(t,e){ctx.setLineDash([10,10]),ctx.beginPath(),ctx.rect(t.x,t.y,e.x-t.x,e.y-t.y),ctx.stroke()}function onWindowKeyDown(t){if(state.isWritting)return!0;const e=tool[t.keyCode];if(e)return updateState({...state,currentTool:t.keyCode}),e.config(ctx),e.shouldDisplay&&displayTool(e.name),!0;const n=colorsCmd[t.keyCode];if(n)return style.setColor(n),tool[state.currentTool].config(ctx),!0;switch(t.keyCode){case 88:return pushToMemStack(canvas),pushToMemPointsStack({x:0,y:0},{x:0,y:0}),cmd.clear(ctx,memCtx,memCanvas),!0;case 90:return cmd.undo(ctx,memCtx,canvas),!0}}function updateState(t){state=t}function displayTool(t){const e=document.getElementById("current-tool");e.innerText=t,e.className="key-fig-container",e.classList.add(t)}function displayColor(t){document.getElementById("current-color").style.backgroundColor=t}function getMousePosition(t,e){const n=t.getBoundingClientRect();return{x:e.clientX-n.left,y:e.clientY-n.top}}function pushPosition(t){points.push({x:t.x,y:t.y})}function clear(){points=[]}function resetMinMaxPoints(){minPoint={...initMinPoint},maxPoint={...initMaxPoint}}function copyToCanvas(t){ctx.drawImage(t,0,0)}function saveToMem(t,e){const n=t.width,o=t.height,i=e.getImageData(0,0,n,o);memCtx.putImageData(i,0,0)}function pushToMemStack(t){const e=document.createElement("canvas"),n=e.getContext("2d");e.height=t.height,e.width=t.width,n.drawImage(t,0,0),memStack.push(e)}function pushToMemPointsStack(t,e){memPointsStack.push({min:t,max:e})}function setMaxMinPoint(t){t.x<minPoint.x&&(minPoint.x=t.x),t.x>maxPoint.x&&(maxPoint.x=t.x),t.y<minPoint.y&&(minPoint.y=t.y),t.y>maxPoint.y&&(maxPoint.y=t.y)}function isInsideFig(t,e,n,o){return n>t.x&&n<e.x&&o>t.y&&o<e.y}resizeCanvas(memCanvas,canvas.width,canvas.height),canvas.addEventListener("mousedown",onCanvasMouseDown,!1),canvas.addEventListener("mousemove",onCanvasMouseMove,!1),canvas.addEventListener("mouseup",onCanvasMouseUp,!1),window.addEventListener("keydown",onWindowKeyDown,!1),updateState({...state,currentTool:68}),tool[state.currentTool].config(ctx),style.setColor("#000000");